[
  {
    "Code": "C",
    "Name": "C",
    "BaseCode": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint num;\r\n\tscanf(\"%d\", &num);\r\n\tprintf(\"Input number is %d.\\n\", num);\r\n}"
  },
  {
    "Code": "CPP14",
    "Name": "C++14",
    "BaseCode": "#include <iostream>\r\nusing namespace std;\r\nint main() {\r\n\tint num;\r\n\tcin >> num;\r\n\tcout << \"Input number is \" << num << endl;\r\n}"
  },
  {
    "Code": "CPP17",
    "Name": "C++17",
    "BaseCode": "#include <iostream>\r\nusing namespace std;\r\nint main() {\r\n\tint num;\r\n\tcin >> num;\r\n\tcout << \"Input number is \" << num << endl;\r\n}"
  },
  {
    "Code": "CLOJURE",
    "Name": "Clojure",
    "BaseCode": "(comment \"\r\n;; Sample code to perform I/O:\r\n\r\n(def x (read-line))                 ; Reading input from STDIN\r\n(println (str \"Hi, \" x \".\"))        ; Writing output to STDOUT\r\n\r\n;; Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\")\r\n\r\n; Write your code here"
  },
  {
    "Code": "CSHARP",
    "Name": "C#",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nauto name = strip(stdin.readln());      // Reading input from STDIN\r\nwriteln(\"Hi, \", name, \".\\n\");           // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "GO",
    "Name": "Go",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nfmt.Scanf(\"%s\", &myname)            // Reading input from STDIN\r\nfmt.Println(\"Hello\", myname)        // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "HASKELL",
    "Name": "Haskell",
    "BaseCode": "-- Sample code to perform I/O:\r\n\r\n-- main = do\r\n--     name <- getLine                         -- Reading input from STDIN\r\n--     putStrLn (\"Hi, \" ++ name ++ \".\")        -- Writing output to STDOUT\r\n\r\n-- Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\r\n-- Write your code here"
  },
  {
    "Code": "JAVA8",
    "Name": "Java 8",
    "BaseCode": "/* IMPORTANT: Multiple classes and nested static classes are supported */\r\n\r\n/*\r\n * uncomment this if you want to read input.\r\n//imports for BufferedReader\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\n\r\n//import for Scanner and other utility classes\r\nimport java.util.*;\r\n*/\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\r\nclass TestClass {\r\n    public static void main(String args[] ) throws Exception {\r\n        /* Sample code to perform I/O:\r\n         * Use either of these methods for input\r\n\r\n        //BufferedReader\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        String name = br.readLine();                // Reading input from STDIN\r\n        System.out.println(\"Hi, \" + name + \".\");    // Writing output to STDOUT\r\n\r\n        //Scanner\r\n        Scanner s = new Scanner(System.in);\r\n        String name = s.nextLine();                 // Reading input from STDIN\r\n        System.out.println(\"Hi, \" + name + \".\");    // Writing output to STDOUT\r\n\r\n        */\r\n\r\n        // Write your code here\r\n\r\n    }\r\n}"
  },
  {
    "Code": "JAVA14",
    "Name": "Java 14",
    "BaseCode": "import java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.util.*;\r\nclass TestClass {\r\n    public static void main(String args[] ) throws Exception {\r\n        //BufferedReader\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        String name = br.readLine();                // Reading input from STDIN\r\n        System.out.println(\"Hi, \" + name + \".\");    // Writing output to STDOUT\r\n    }\r\n}"
  },
  {
    "Code": "JAVASCRIPT_NODE",
    "Name": "JavaScript(Nodejs)",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding(\"utf-8\");\r\nvar stdin_input = \"\";\r\n\r\nprocess.stdin.on(\"data\", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on(\"end\", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    process.stdout.write(\"Hi, \" + input + \".\\n\");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "KOTLIN",
    "Name": "Kotlin",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nval name = readLine()!!             // Reading input from STDIN\r\nprintln(\"Hi, \" + name + \".\");       // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "OBJECTIVEC",
    "Name": "Objective C",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\n# include<stdio.h>\r\n\r\nint main(){\r\n    int num;\r\n\r\n    scanf(\"%s\", &num);                              // Reading input from STDIN\r\n    printf(\"Input number is %s.\\n\", &num);           // Writing output to STDOUT\r\n\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "PASCAL",
    "Name": "Pascal",
    "BaseCode": "(*\r\n// Sample code to perform I/O:\r\n\r\nreadln (name);                      // Reading input from STDIN\r\nwriteln ('Hi, ', name, '.');        // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*)\r\n\r\n// Write your code here"
  },
  {
    "Code": "PERL",
    "Name": "Perl",
    "BaseCode": "=comment\r\n# Sample code to perform I/O:\r\n\r\nmy $name = <STDIN>;             # Reading input from STDIN\r\nprint \"Hi, $name.\\n\";           # Writing output to STDOUT\r\n\r\n# Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n=cut\r\n\r\n# Write your code here"
  },
  {
    "Code": "PHP",
    "Name": "PHP",
    "BaseCode": "<?php\r\n/*\r\n// Sample code to perform I/O:\r\n\r\nfscanf(STDIN, \"%s\\n\", $name);           // Reading input from STDIN\r\necho \"Hi, \".$name.\".\\n\";                // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here\r\n\r\n?>"
  },
  {
    "Code": "PYTHON",
    "Name": "Python 2",
    "BaseCode": "name = raw_input()          # Reading input from STDIN\r\nprint('Hi, %s.' % name)      # Writing output to STDOUT"
  },
  {
    "Code": "PYTHON3",
    "Name": "Python 3",
    "BaseCode": "name = input()                  # Reading input from STDIN\r\nprint('Hi, %s.' % name)         # Writing output to STDOUT"
  },
  {
    "Code": "PYTHON3_8",
    "Name": "Python 3.8",
    "BaseCode": "name = input()                  # Reading input from STDIN\r\nprint('Hi, %s.' % name)         # Writing output to STDOUT"
  },
  {
    "Code": "R",
    "Name": "R",
    "BaseCode": "cat(\"Hello World!\")"
  },
  {
    "Code": "RUBY",
    "Name": "Ruby",
    "BaseCode": "=begin\r\n# Sample code to perform I/O:\r\n\r\nname = gets.chomp                # Reading input from STDIN\r\nprint \"Hi, #{name}.\\n\"           # Writing output to STDOUT\r\n\r\n# Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n=end\r\n\r\n# Write your code here"
  },
  {
    "Code": "RUST",
    "Name": "Rust",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nuse std::io;\r\nuse std::io::prelude::*;\r\n\r\nfn main() {\r\n    let mut name = String::new();\r\n    io::stdin().read_line(&mut name).unwrap();          // Reading input from STDIN\r\n    println!(\"Hi, {}.\", name);                          // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "SCALA",
    "Name": "Scala",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nval name = scala.io.StdIn.readLine()        // Reading input from STDIN\r\nprintln(\"Hi, \" + name + \".\")                // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "SWIFT",
    "Name": "Swift",
    "BaseCode": "/*\r\n// Sample code to perform I/O:\r\n\r\nlet name = readLine()                           // Reading input from STDIN\r\nprint(\"Hi, \", name!, \".\\n\", separator: \"\")      // Writing output to STDOUT\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here"
  },
  {
    "Code": "TYPESCRIPT",
    "Name": "TypeScript",
    "BaseCode": "console.log(\"Hello World!\")"
  }
]